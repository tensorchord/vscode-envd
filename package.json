{
    "name": "vscode-envd",
    "displayName": "vscode-envd",
    "description": "envd extension for visual studio code",
    "publisher": "tensorchord",
    "repository": {
        "type": "git",
        "url": "https://github.com/tensorchord/vscode-envd"
    },
    "version": "0.0.7",
    "icon": "media/icon.png",
    "engines": {
        "vscode": "^1.63.0"
    },
    "categories": [
        "Programming Languages"
    ],
    "keywords": [
        "envd",
        "Kubernetes",
        "kubernetes",
        "k8s",
        "development",
        "development environment",
        "dev env",
        "docker",
        "buildkit"
    ],
    "contributes": {
        "languages": [
            {
                "id": "envd",
                "aliases": [
                    "Envd",
                    "envd"
                ],
                "extensions": [
                    ".envd",
                    "build.envd",
                    "config.envd"
                ],
                "configuration": "./syntaxes/envd.configuration.json"
            }
        ],
        "grammars": [
            {
                "language": "envd",
                "scopeName": "source.envd",
                "path": "./syntaxes/envd.tmLanguage.json"
            }
        ],
        "viewsContainers": {
            "activitybar": [
                {
                    "id": "envd-explorer",
                    "title": "Envd VSCode Explorer",
                    "icon": "media/dark/envd.svg"
                }
            ]
        },
        "views": {
            "envd-explorer": [
                {
                    "id": "envd-environment",
                    "name": "Environments"
                },
                {
                    "id": "envd-image",
                    "name": "Images"
                },
                {
                    "id": "envd-context",
                    "name": "Contexts"
                }
            ]
        },
        "commands": [
            {
                "command": "envd.restartServer",
                "title": "Envd: Restart LSP Server"
            },
            {
                "command": "envd.switchEnvdVersion",
                "title": "Envd: Switch envd version"
            },
            {
                "command": "envd.switchLspVersion",
                "title": "Envd: Switch LSP Server version"
            },
            {
                "command": "envd.upgradeAll",
                "title": "Envd: Upgrade Envd and LSP Server"
            },
            {
                "command": "envd-environment.refresh",
                "title": "Refresh environments",
                "icon": {
                    "light": "media/light/refresh.svg",
                    "dark": "media/dark/refresh.svg"
                }
            },
            {
                "command": "environment.attach-ssh",
                "title": "Attach to terminal",
                "icon": {
                    "light": "media/light/arrow-right.svg",
                    "dark": "media/dark/arrow-right.svg"
                }
            },
            {
                "command": "environment.attach-window",
                "title": "Attach to VSCode",
                "icon": {
                    "light": "media/light/empty-window.svg",
                    "dark": "media/dark/empty-window.svg"
                }
            },
            {
                "command": "endpoint.attach-endpoint",
                "title": "Attach to EndPoint",
                "icon": {
                    "light": "media/light/arrow-right.svg",
                    "dark": "media/dark/arrow-right.svg"
                }
            },
            {
                "command": "environment.destroy",
                "title": "Destroy"
            },
            {
                "command": "envd-image.refresh",
                "title": "Refresh images",
                "icon": {
                    "light": "media/light/refresh.svg",
                    "dark": "media/dark/refresh.svg"
                }
            },
            {
                "command": "image.remove",
                "title": "Remove"
            },
            {
                "command": "envd-context.refresh",
                "title": "Refresh context",
                "icon": {
                    "light": "media/light/refresh.svg",
                    "dark": "media/dark/refresh.svg"
                }
            },
            {
                "command": "context.remove",
                "title": "Remove"
            },
            {
                "command": "context.use",
                "title": "Use the context",
                "icon": {
                    "light": "media/light/location.svg",
                    "dark": "media/dark/location.svg"
                }
            }
        ],
        "menus": {
            "view/item/context": [
                {
                    "command": "environment.attach-ssh",
                    "when": "view == envd-environment && viewItem == environment",
                    "group": "inline"
                },
                {
                    "command": "environment.attach-window",
                    "when": "view ==  envd-environment && viewItem == environment",
                    "group": "inline"
                },
                {
                    "command": "endpoint.attach-endpoint",
                    "when": "view == envd-environment && viewItem == endpoint",
                    "group": "inline"
                },
                {
                    "command": "environment.attach-ssh",
                    "when": "view == envd-environment && viewItem == environment",
                    "group": "environment@0"
                },
                {
                    "command": "environment.attach-window",
                    "when": "view == envd-environment && viewItem == environment",
                    "group": "environment@1"
                },
                {
                    "command": "endpoint.attach-endpoint",
                    "when": "view == envd-environment && viewItem == endpoint",
                    "group": "endpoint@1"
                },
                {
                    "command": "environment.destroy",
                    "when": "view == envd-environment && viewItem == environment",
                    "group": "environment@2"
                },
                {
                    "command": "image.remove",
                    "when": "view == envd-image && viewItem == image",
                    "group": "image@0"
                },
                {
                    "command": "context.use",
                    "when": "view == envd-context && viewItem == context",
                    "group": "inline"
                },
                {
                    "command": "context.use",
                    "when": "view == envd-context && viewItem == context",
                    "group": "context@0"
                },
                {
                    "command": "context.remove",
                    "when": "view == envd-context && viewItem == context",
                    "group": "context@1"
                }
            ],
            "view/title": [
                {
                    "command": "envd-environment.refresh",
                    "when": "view == envd-environment",
                    "group": "navigation"
                },
                {
                    "command": "envd-image.refresh",
                    "when": "view == envd-image",
                    "group": "navigation"
                },
                {
                    "command": "envd-context.refresh",
                    "when": "view == envd-context",
                    "group": "navigation"
                }
            ]
        },
        "configuration": [
            {
                "type": "object",
                "title": "envd",
                "properties": {
                    "envd.server.trace": {
                        "type": "boolean",
                        "default": false,
                        "markdownDescription": "Log requests and responses of `LSP Server`"
                    },
                    "envd.server.port": {
                        "type": [
                            "number",
                            "null"
                        ],
                        "default": null,
                        "markdownDescription": "Port (on localhost) of running `LSP Server`",
                        "scope": "machine-overridable"
                    },
                    "envd.showStatusBarButton": {
                        "type": "boolean",
                        "default": true,
                        "description": "Whether to show a button for the extension in the VSCode StatusBar",
                        "scope": "machine-overridable"
                    },
                    "envd.intall.checkVersion": {
                        "type": "boolean",
                        "default": true,
                        "markdownDescription": "If set to true, the extension will check `envd` and `LSP Server` version at start, and notify when new version available or `envd` and `LSP Server` version dismatch. Version management of `envd` is only valid when `pip package manager` is chosen at `#envd.intall.envdLocation#`",
                        "scope": "machine-overridable"
                    },
                    "envd.intall.envdLocation": {
                        "type": "string",
                        "default": "pip package manager",
                        "enum": [
                            "pip package manager",
                            "raw path"
                        ],
                        "markdownEnumDescriptions": [
                            "Depend on `pip` to install or point to envd path",
                            "Given the envd path(could not switch envd version)"
                        ],
                        "markdownDescription": "When choose `pip package manager`, the envd is managed by pip from `pythonPath` and `indexUrl`. If choose `raw path`, we use a fixed path of envd, this option may be helpful if you want to used a self-compiled envd. The version switch feature is only enabled at `pip package manager`",
                        "scope": "machine-overridable"
                    },
                    "envd.intall.versionCheckSource": {
                        "type": "string",
                        "default": "pypi",
                        "enum": [
                            "pypi",
                            "Github"
                        ],
                        "markdownEnumDescriptions": [
                            "Fetch version from https://pypi.org/pypi/envd/json",
                            "Fetch version from https://api.github.com/repos/tensorchord/envd-lsp/tags"
                        ],
                        "markdownDescription": "Where to fetch online `envd` version list, from `pypi` or `Github`",
                        "scope": "machine-overridable"
                    },
                    "envd.intall.python.pythonPath": {
                        "type": "string",
                        "default": "python3",
                        "markdownDescription": "Used path of Python to install envd, valid when `pip package manager` is chosen at `#envd.intall.envdLocation#`",
                        "scope": "machine-overridable"
                    },
                    "envd.intall.python.indexUrl": {
                        "type": "string",
                        "default": "",
                        "markdownDescription": "Used mirror of PyPI, valid when `pip package manager` is chosen at `#envd.intall.envdLocation#`",
                        "scope": "machine-overridable"
                    },
                    "envd.intall.path.envdPath": {
                        "type": "string",
                        "default": null,
                        "markdownDescription": "File path of envd, valid when `raw path` is chosen at `#envd.intall.envdLocation#`",
                        "scope": "machine-overridable"
                    }
                }
            }
        ]
    },
    "main": "./out/extension.js",
    "activationEvents": [
        "onLanguage:envd"
    ],
    "scripts": {
        "vscode:prepublish": "npm run compile",
        "esbuild-base": "esbuild ./src/extension.ts --bundle --outfile=out/extension.js --external:vscode --format=cjs --platform=node",
        "esbuild": "npm run esbuild-base -- --sourcemap",
        "compile": "npm run esbuild",
        "build-local": "npx vsce package -o dist/envd-vscode.vsix",
        "watch": "tsc -watch -p ./",
        "clean": "rm -rf out",
        "pretest": "npm run compile",
        "lint": "eslint src test --ext ts",
        "fix-lint": "eslint src test --ext ts --fix",
        "test": "jest"
    },
    "dependencies": {
        "@types/glob": "^7.2.0",
        "@types/split2": "^3.2.1",
        "compare-versions": "6.0.0-rc.1",
        "glob": "^7.2.0",
        "node-fetch": "^3.3.1",
        "split2": "^4.1.0",
        "vscode-languageclient": "^7.0.0"
    },
    "devDependencies": {
        "@types/jest": "^29.2.4",
        "@types/node": "^18.11.18",
        "@types/vscode": "^1.63.0",
        "@typescript-eslint/eslint-plugin": "^5.47.1",
        "@typescript-eslint/parser": "^5.47.1",
        "@vscode/test-electron": "^1.6.2",
        "esbuild": "0.14.54",
        "eslint": "^8.31.0",
        "eslint-config-xo": "^0.43.1",
        "eslint-config-xo-typescript": "^0.55.1",
        "jest-environment-node": "^29.3.1",
        "prettier": "2.6.2",
        "ts-jest": "^29.0.3",
        "ts-node": "^10.9.1",
        "typescript": "^4.9.4"
    }
}
